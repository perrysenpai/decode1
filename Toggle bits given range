Given a non-negative number N and two values L and R. Toggle the bits 0 to 1 and a bit 1 to 0. from left to right;

Approach: lets take a number 50 and L=2 and R=5;
          50=110010
          to invert the bits from 2 to 5
          we'll have 101100 we''ll get this if we xor our number as follows:  110010
                                                                              011110
          i.e xoring with 011110=30 
          30=Math.pow(2,5)-Math.pow(2,1)
          
          Hence,
          
          
          System.out.println(num^(int)(Math.pow(2,R)-Math.pow(2,L-1)));
          
          or,
          
          
          xoring individually with 01,001,0001,00001
      for(int i=a; i<=b; i++)
	    {
	        num=((1<<(i-1))^(num));
	    }
	    System.out.println(num);
          
          
          
